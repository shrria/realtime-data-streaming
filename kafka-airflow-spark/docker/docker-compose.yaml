services:
  ################ Kafka ################

  kafka-node-1:
    image: apache/kafka:3.7.0
    container_name: kafka-node-1
    ports:
      - "29092:9092"
    volumes:
      - ../logs/kafka-logs-1:/tmp/kafka-logs-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9093,2@kafka-node-2:9093,3@kafka-node-3:9093
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-node-1:19092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_DIRS: /tmp/kafka-logs-1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kraft-network

  kafka-node-2:
    image: apache/kafka:3.7.0
    container_name: kafka-node-2
    ports:
      - "39092:9092"
    volumes:
      - ../logs/kafka-logs-2:/tmp/kafka-logs-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9092,2@kafka-node-2:9092,3@kafka-node-3:9092
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9092
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-node-2:19092,PLAINTEXT_HOST://localhost:39092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_DIRS: /tmp/kafka-logs-2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kraft-network

  kafka-node-3:
    image: apache/kafka:3.7.0
    container_name: kafka-node-3
    ports:
      - "49092:9092"
    volumes:
      - ../logs/kafka-logs-3:/tmp/kafka-logs-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:19092,CONTROLLER://:9092
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-node-3:19092,PLAINTEXT_HOST://localhost:49092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_DIRS: /tmp/kafka-logs-3
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-node-1:9092,2@kafka-node-2:9092,3@kafka-node-3:9092
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kraft-network

  ############### Airflow ###############

  webserver:
    image: apache/airflow:2.6.0-python3.9
    command: webserver
    container_name: webserver
    entrypoint: ["/bin/bash", "/opt/airflow/script/entrypoint.sh"]
    ports:
      - "8080:8080"
    environment:
      LOAD_EX: n
      EXECUTOR: Sequential
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW_WEBSERVER_SECRET_KEY: ${AIRFLOW_WEBSERVER_SECRET_KEY}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ../airflow/requirements.txt:/opt/airflow/requirements.txt
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - postgres
    networks:
      - kraft-network

  scheduler:
    image: apache/airflow:2.6.0-python3.9
    command: bash -c "pip install -r ./requirements.txt && airflow db upgrade && airflow scheduler"
    container_name: scheduler
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ../airflow/requirements.txt:/opt/airflow/requirements.txt
    environment:
      LOAD_EX: n
      EXECUTOR: Sequential
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW_WEBSERVER_SECRET_KEY: ${AIRFLOW_WEBSERVER_SECRET_KEY}
    depends_on:
      webserver:
        condition: service_healthy
    networks:
      - kraft-network

  postgres:
    image: postgres:14.0
    container_name: airflow-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - kraft-network

  ################ Spark ################

  spark-master:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.master.Master
    container_name: spark-master
    ports:
      - "9090:8080"
      - "7077:7077"
    networks:
      - kraft-network

  spark-worker:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    container_name: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - kraft-network

  cassandra_db:
    image: cassandra:latest
    container_name: cassandra
    hostname: cassandra
    ports:
      - "9042:9042"
    environment:
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
    networks:
      - kraft-network

networks:
  kraft-network:
    driver: bridge
